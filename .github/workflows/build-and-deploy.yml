name: Build and Deployment

on:
    push:
        branches:
            - deprecated
    pull_request:
    workflow_dispatch:

concurrency:
    group: rust-${{ github.ref }}
    cancel-in-progress: true

jobs:
    image:
        name: Build and publish image

        runs-on:
            - self-hosted
            - large

        if: github.event_name != 'pull_request'

        steps:
            # checkout with Git history
            - name: Checkout repo
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  submodules: false
                  ssh-key: ${{ env.FST_PRIVATE_REPO_SSH_KEY }}

            - name: Setup Nodejs
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            # The production has to be built first then copied into the container
            # so that 'showLastUpdateTime' can work
            - name: Install dependencies and build production
              run: |
                  npm i -g yarn
                  yarn install --frozen-lockfile
                  yarn build

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-west-2

            - name: Login to Amazon ECR
              uses: aws-actions/amazon-ecr-login@v2

            - name: Install docker-buildx
              uses: docker/setup-buildx-action@v3
              with:
                  version: latest

            - name: Setup container metadata
              id: meta-loc-documentation
              uses: docker/metadata-action@v5
              with:
                  images: 630821417359.dkr.ecr.us-west-2.amazonaws.com/loc/documentation
                  tags: |
                      type=schedule
                      type=ref,event=branch
                      type=ref,event=pr
                  flavor: |
                      latest=auto

            - name: Build container image
              uses: docker/build-push-action@v6
              with:
                  file: ./dev-support/containers/nginx/Dockerfile
                  target: loc-doc-aws-deployment
                  context: .
                  pull: true
                  push: true
                  tags: ${{ steps.meta-loc-documentation.outputs.tags }}
                  labels: ${{ steps.meta-loc-documentation.outputs.labels }}

    deploy:
        name: Deploy Docusaurus app

        runs-on:
            - self-hosted
            - small

        if: github.event_name != 'pull_request'

        needs:
            - image

        steps:
            - name: Checkout for Argo CD
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  submodules: "true"
                  ssh-key: ${{ env.FST_PRIVATE_REPO_SSH_KEY }}

            - name: Sync Argo CD application
              uses: omegion/argocd-app-actions@v1
              with:
                  action: sync
                  address: ${{ secrets.ARGO_CD_ENDPOINT }}
                  token: ${{ secrets.ARGO_CD_TOKEN }}
                  appName: ${{ secrets.ARGO_CD_DEV_APP_NAME }}
